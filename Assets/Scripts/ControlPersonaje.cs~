using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
//Using TEXTMESHPRO
using TMPro;

public class ControlPersonaje : MonoBehaviour
{
	Rigidbody2D rgb;
	Animator anim;
	public float maxVel = 5f;
	bool haciaDerecha = true;
	//new components
	public Slider slider;
	//text 
	public TMP_Text textorco;
	//energy
	public float energy=100;
	//

	//control arbol
	Controlarbol ctrArbol=null;

	//Puntajes
	public int CostoGolpeAire=1;
	public int CostoGolpeArbol=3;
	public int premioArbol=15;
	//

	//Hacha
	public GameObject hacha=null;
	//
	//Controles
	bool enFire1=false;
	//Saltar
	public bool jumping = false;
	public float yJumpForce = 300;
	Vector2 jumpForce;
	//
	public int costoBala=20;
	// Start is called before the first frame update
	void Start()
	{
		rgb = GetComponent<Rigidbody2D> ();
		anim = GetComponent<Animator> ();
		hacha = GameObject.Find("orc_weapon");
		//hacha = GameObject.Find("/orc/orc_body/orc_R_arm/orc_R_hand/orc_weapon");
		energy = 100;	

		jumpForce = new Vector2 (0,0);

	}

	void Update(){
		if (!anim.GetCurrentAnimatorStateInfo (0).IsName ("Muriendo")) {
			if (energy <= 0) {
				energy = 0;
				anim.SetTrigger ("morir");
			}
		} else
			return;


		if (Mathf.Abs (Input.GetAxis ("Fire1")) > 0.01f) {
			if (enFire1 == false) {
				enFire1 = true;
			   hacha.GetComponent<CircleCollider2D>().enabled = false;
				anim.SetTrigger ("attack");
				if (ctrArbol != null) {
					if ( ctrArbol.GolpeOrco () ) {
						energy += premioArbol;
						if (energy > 100)
							energy = 100;
					} else {
						energy -= CostoGolpeArbol;
					}
				} else {
					energy -= CostoGolpeAire;
				}
			}
		} else {
			enFire1 = false;
		}
		slider.value = energy;
		textorco.text = energy.ToString ();
	}
	//habilitar hacha

	public void HabilitarTriggerHacha()
	{
		hacha.GetComponent<CircleCollider2D>().enabled = true;
	}

		void FixedUpdate()
	{
		float v = Input.GetAxis ("Horizontal");
		Vector2 vel = new Vector2 (0,rgb.velocity.y);
		v *= maxVel;
		vel.x = v;
		rgb.velocity = vel;
		anim.SetFloat("speed",vel.x);
		if (haciaDerecha && v < 0){
			haciaDerecha = false;
			Flip();
		}
		else if (!haciaDerecha && v > 0){
			haciaDerecha = true;
			Flip();
		}

		if(Input.GetAxis("Jump")>0.01f){
			if(!jumping){
				jumping = true;
				jumpForce.x = 0f;
				jumpForce.y = yJumpForce;
				rgb.AddForce (jumpForce);
			}
		}else{
			jumping = false;
		}


	}

	void Flip() {
		var s = transform.localScale;
		s.x *= -1;
		transform.localScale = s;
	}

	public void SetControlarbol(Controlarbol ctr){
		ctrArbol = ctr;
	}

	public void RecibirBala(){
		energy -= costoBala;
	}


}